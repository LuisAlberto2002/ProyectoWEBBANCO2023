name: Next.js CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint-commits:
    name: Lint Commits
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install CommitLint
        run: |
          npm install -g @commitlint/cli @commitlint/config-conventional
          echo "module.exports = {extends: ['@commitlint/config-conventional']}" > commitlint.config.js

      - name: Lint Commits
        run: git log -1 --pretty=format:"%s" | commitlint

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm ci

      - name: Run Security Audit
        run: npm audit --production

  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

  tests:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm ci

      - name: Run Tests
        run: npm test

  build:
    name: Build Next.js App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm ci

      - name: Build Application
        run: npm run build

  sca:
    name: Static Code Analysis (SCA)
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      
      - run: docker run --rm -v $(pwd):/src hysnsec/safety check -r requirements.txt --json | tee sca-results.json
        continue-on-error: true

      - uses: actions/upload-artifact@v3
        with:
          name: Safety Results
          path: sca-results.json

  sast:
    name: Static Application Security Testing (SAST)
    runs-on: ubuntu-latest
    needs: sca
    steps:
      - uses: actions/checkout@v3

      - run: docker run --rm -v $(pwd):/src hysnsec/bandit -r /src -f json -o /src/bandit-output.json
        continue-on-error: true

      - uses: actions/upload-artifact@v3
        with:
          name: Bandit Report
          path: /src/bandit-output.json

  zap_baseline:
    name: OWASP ZAP Baseline Scan
    runs-on: ubuntu-latest
    needs: sast
    steps:
      - run: |
          docker pull zaproxy/zap-stable
          docker run --rm -v $(pwd):/zap/wrk:rw -w /zap zaproxy/zap-stable zap-baseline.py -t aplicacion-prod.com -J zap-output.json
        continue-on-error: true

      - uses: actions/upload-artifact@v3
        with:
          name: ZAP Scan Report
          path: zap-output.json

  integration:
    name: Integration Testing
    runs-on: ubuntu-latest
    needs: zap_baseline
    steps:
      - run: echo "Running integration tests..."
      - run: exit 1 # Replace this with actual integration test commands
        continue-on-error: true

  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    needs: integration
    steps:
      - name: Deployment Placeholder
        run: echo "Deploying application to production"