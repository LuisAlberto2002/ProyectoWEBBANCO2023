#name: Application # TEST-APP-ATLAS
name: AplicacionBanco

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-20.04 
    steps:
      - uses: actions/checkout@v2 
      
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.6'

      - run: |
          pip3 install --upgrade virtualenv
          virtualenv env
          source env/bin/activate
          pip install -r requirements.txt
          python manage.py check
  
  test:
    runs-on: ubuntu-20.04
    needs: build
    steps:
      - uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.6'

      - run: |
          pip3 install --upgrade virtualenv
          virtualenv env
          source env/bin/activate
          pip install -r requirements.txt
          python manage.py test taskManager
  
  sca:
    runs-on: ubuntu-20.04
    needs: test
    steps:
      - uses: actions/checkout@v2
      
      - run: docker run --rm -v $(pwd):/src hysnsec/safety check -r requirements.txt --json | tee sca-results.json
        continue-on-error: true
      
      - uses: actions/upload-artifact@v4
        with:
          name: Safety
          path: oast-results.json
        if: always()


  sast:
    runs-on: ubuntu-20.04
    needs: sca
    steps:
      - uses: actions/checkout@v2

      - run: docker run --rm -v $(pwd):/src hysnsec/bandit -r /src -f json -o /src/bandit-output.json
        continue-on-error: true


      - uses: actions/upload-artifact@v4
        with:
          name: Bandit
          path: bandit-output.json
        if: always()

  integration:
    runs-on: ubuntu-20.04
    needs: sca
    steps:
      - run: echo "This is an integration step"
      - run: exit 1
        continue-on-error: true
        
        
  zap_baseline:
    runs-on: ubuntu-20.04
    needs: integration
    steps:
      - run: |
           docker pull zaproxy/zap-stable
           docker run --user root --rm -v $(pwd):/zap/wrk:rw -w /zap zaproxy/zap-stable zap-baseline.py -t aplicacion-prod.com -J zap-output.json

      - uses: actions/upload-artifact@v4
        with:
          name: ZAP Scan
          path: zap-output.json
        if: always() 

  
  prod:
    runs-on: ubuntu-20.04
    needs: zap-basline
    steps:
      - run: echo "This is a deploy step."
